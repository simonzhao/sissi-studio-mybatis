package $!{table.getInterfacePackageName()};
#set($paramClassName = $table.getParamClassName())
#set($paramName = $table.getParamName())
#set($doClassName = $table.getDomainObjectName())
import $!{table.getFullDomainObjectName()};
import $!{table.getFullParamName()};
import java.util.List;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

/**
 * 本类通过 Sissi Studio Mybatis Generator 生成
 * @author sissi.generator 
 */
@Mapper
public interface $!{table.getInterfaceName()}{
    /**
     * 根据WHERE条件COUNT
     * @param $!{paramName}
     * @return
     */
    long countByParam($!{paramClassName} $!{paramName});

    /**
     * 根据WHERE条件删除
     * @param $!{paramName} 
     * @return
     */
    int deleteByParam($!{paramClassName} $!{paramName});

    /**
     * 根据主键删除
     * @param id
     * @return
     */
    int deleteByPrimaryKey(Long id);

    /**
     * 插入单条记录
     * @param record
     * @return
     */
    int insert($!{doClassName} record);

    /**
     * 根据字段选择性插入单条记录
     * @param record
     * @return
     */
    int insertSelective($!{doClassName} record);

    /**
     * 根据WHERE条件查询
     * @param $!{paramName}
     * @return
     */
    List<$!{doClassName}> selectByParam($!{paramClassName} $!{paramName});

    /**
     * 根据主键查询
     * @param id
     * @return
     */
    $!{doClassName} selectByPrimaryKey(Long id);

    /**
     * 根据WHERE条件选择性更新
     * @param record
     * @param $!{paramName}
     * @return
     */
    int updateByParamSelective(@Param("record") $!{doClassName} record, @Param("$!{paramName}") $!{paramClassName} $!{paramName});

    /**
     * 根据WHERE条件更新
     * @param record
     * @param $!{paramName}
     * @return
     */
    int updateByParam(@Param("record") $!{doClassName} record, @Param("$!{paramName}") $!{paramClassName} $!{paramName});

    /**
     * 根据主键选择性更新
     * @param record
     * @return
     */
    int updateByPrimaryKeySelective($!{doClassName} record);

    /**
     * 根据主键更新
     * @param record
     * @return
     */
    int updateByPrimaryKey($!{doClassName} record);

    /**
     * 批量插入
     * @param records
     * @return
     */
    int batchInsert(List<$!{doClassName}> records);
}
